// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.ProtoUtil;
import us.hebi.quickbuf.RepeatedInt;
import us.hebi.quickbuf.RepeatedMessage;
import us.hebi.quickbuf.Utf8String;

public final class BattleStatisticsOuterClass {
  /**
   * Protobuf type {@code BattleStatistics}
   */
  public static final class BattleStatistics extends ProtoMessage<BattleStatistics> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional double HKCPJKPOKGF = 5;</code>
     */
    private double hKCPJKPOKGF;

    /**
     * <code>optional double CKGDEAKGMLJ = 6;</code>
     */
    private double cKGDEAKGMLJ;

    /**
     * <code>optional uint32 total_battle_turns = 1;</code>
     */
    private int totalBattleTurns;

    /**
     * <code>optional uint32 total_auto_turns = 2;</code>
     */
    private int totalAutoTurns;

    /**
     * <code>optional uint32 NIFHACPIHFP = 4;</code>
     */
    private int nIFHACPIHFP;

    /**
     * <pre>
     * repeated MonsterBattleInfo monster_list = 8;
     * </pre>
     *
     * <code>optional uint32 KIGOIMMHHLE = 9;</code>
     */
    private int kIGOIMMHHLE;

    /**
     * <code>optional uint32 AOLAHGLLBAG = 10;</code>
     */
    private int aOLAHGLLBAG;

    /**
     * <code>optional uint32 FCFPKHNLGKA = 11;</code>
     */
    private int fCFPKHNLGKA;

    /**
     * <code>optional uint32 LIAALHKEHIM = 12;</code>
     */
    private int lIAALHKEHIM;

    /**
     * <code>optional uint32 BEKMEDAINKG = 14;</code>
     */
    private int bEKMEDAINKG;

    /**
     * <code>repeated uint32 avatar_id_list = 3;</code>
     */
    private final RepeatedInt avatarIdList = RepeatedInt.newEmptyInstance();

    /**
     * <code>repeated .AvatarBattleInfo battle_avatar_list = 7;</code>
     */
    private final RepeatedMessage<AvatarBattleInfoOuterClass.AvatarBattleInfo> battleAvatarList = RepeatedMessage.newEmptyInstance(AvatarBattleInfoOuterClass.AvatarBattleInfo.getFactory());

    /**
     * <code>repeated .BattleStatistics.CustomValuesEntry custom_values = 13;</code>
     */
    private final RepeatedMessage<CustomValuesEntry> customValues = RepeatedMessage.newEmptyInstance(CustomValuesEntry.getFactory());

    private BattleStatistics() {
    }

    /**
     * @return a new empty instance of {@code BattleStatistics}
     */
    public static BattleStatistics newInstance() {
      return new BattleStatistics();
    }

    /**
     * <code>optional double HKCPJKPOKGF = 5;</code>
     * @return whether the hKCPJKPOKGF field is set
     */
    public boolean hasHKCPJKPOKGF() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional double HKCPJKPOKGF = 5;</code>
     * @return this
     */
    public BattleStatistics clearHKCPJKPOKGF() {
      bitField0_ &= ~0x00000001;
      hKCPJKPOKGF = 0D;
      return this;
    }

    /**
     * <code>optional double HKCPJKPOKGF = 5;</code>
     * @return the hKCPJKPOKGF
     */
    public double getHKCPJKPOKGF() {
      return hKCPJKPOKGF;
    }

    /**
     * <code>optional double HKCPJKPOKGF = 5;</code>
     * @param value the hKCPJKPOKGF to set
     * @return this
     */
    public BattleStatistics setHKCPJKPOKGF(final double value) {
      bitField0_ |= 0x00000001;
      hKCPJKPOKGF = value;
      return this;
    }

    /**
     * <code>optional double CKGDEAKGMLJ = 6;</code>
     * @return whether the cKGDEAKGMLJ field is set
     */
    public boolean hasCKGDEAKGMLJ() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional double CKGDEAKGMLJ = 6;</code>
     * @return this
     */
    public BattleStatistics clearCKGDEAKGMLJ() {
      bitField0_ &= ~0x00000002;
      cKGDEAKGMLJ = 0D;
      return this;
    }

    /**
     * <code>optional double CKGDEAKGMLJ = 6;</code>
     * @return the cKGDEAKGMLJ
     */
    public double getCKGDEAKGMLJ() {
      return cKGDEAKGMLJ;
    }

    /**
     * <code>optional double CKGDEAKGMLJ = 6;</code>
     * @param value the cKGDEAKGMLJ to set
     * @return this
     */
    public BattleStatistics setCKGDEAKGMLJ(final double value) {
      bitField0_ |= 0x00000002;
      cKGDEAKGMLJ = value;
      return this;
    }

    /**
     * <code>optional uint32 total_battle_turns = 1;</code>
     * @return whether the totalBattleTurns field is set
     */
    public boolean hasTotalBattleTurns() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional uint32 total_battle_turns = 1;</code>
     * @return this
     */
    public BattleStatistics clearTotalBattleTurns() {
      bitField0_ &= ~0x00000004;
      totalBattleTurns = 0;
      return this;
    }

    /**
     * <code>optional uint32 total_battle_turns = 1;</code>
     * @return the totalBattleTurns
     */
    public int getTotalBattleTurns() {
      return totalBattleTurns;
    }

    /**
     * <code>optional uint32 total_battle_turns = 1;</code>
     * @param value the totalBattleTurns to set
     * @return this
     */
    public BattleStatistics setTotalBattleTurns(final int value) {
      bitField0_ |= 0x00000004;
      totalBattleTurns = value;
      return this;
    }

    /**
     * <code>optional uint32 total_auto_turns = 2;</code>
     * @return whether the totalAutoTurns field is set
     */
    public boolean hasTotalAutoTurns() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional uint32 total_auto_turns = 2;</code>
     * @return this
     */
    public BattleStatistics clearTotalAutoTurns() {
      bitField0_ &= ~0x00000008;
      totalAutoTurns = 0;
      return this;
    }

    /**
     * <code>optional uint32 total_auto_turns = 2;</code>
     * @return the totalAutoTurns
     */
    public int getTotalAutoTurns() {
      return totalAutoTurns;
    }

    /**
     * <code>optional uint32 total_auto_turns = 2;</code>
     * @param value the totalAutoTurns to set
     * @return this
     */
    public BattleStatistics setTotalAutoTurns(final int value) {
      bitField0_ |= 0x00000008;
      totalAutoTurns = value;
      return this;
    }

    /**
     * <code>optional uint32 NIFHACPIHFP = 4;</code>
     * @return whether the nIFHACPIHFP field is set
     */
    public boolean hasNIFHACPIHFP() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional uint32 NIFHACPIHFP = 4;</code>
     * @return this
     */
    public BattleStatistics clearNIFHACPIHFP() {
      bitField0_ &= ~0x00000010;
      nIFHACPIHFP = 0;
      return this;
    }

    /**
     * <code>optional uint32 NIFHACPIHFP = 4;</code>
     * @return the nIFHACPIHFP
     */
    public int getNIFHACPIHFP() {
      return nIFHACPIHFP;
    }

    /**
     * <code>optional uint32 NIFHACPIHFP = 4;</code>
     * @param value the nIFHACPIHFP to set
     * @return this
     */
    public BattleStatistics setNIFHACPIHFP(final int value) {
      bitField0_ |= 0x00000010;
      nIFHACPIHFP = value;
      return this;
    }

    /**
     * <pre>
     * repeated MonsterBattleInfo monster_list = 8;
     * </pre>
     *
     * <code>optional uint32 KIGOIMMHHLE = 9;</code>
     * @return whether the kIGOIMMHHLE field is set
     */
    public boolean hasKIGOIMMHHLE() {
      return (bitField0_ & 0x00000020) != 0;
    }

    /**
     * <pre>
     * repeated MonsterBattleInfo monster_list = 8;
     * </pre>
     *
     * <code>optional uint32 KIGOIMMHHLE = 9;</code>
     * @return this
     */
    public BattleStatistics clearKIGOIMMHHLE() {
      bitField0_ &= ~0x00000020;
      kIGOIMMHHLE = 0;
      return this;
    }

    /**
     * <pre>
     * repeated MonsterBattleInfo monster_list = 8;
     * </pre>
     *
     * <code>optional uint32 KIGOIMMHHLE = 9;</code>
     * @return the kIGOIMMHHLE
     */
    public int getKIGOIMMHHLE() {
      return kIGOIMMHHLE;
    }

    /**
     * <pre>
     * repeated MonsterBattleInfo monster_list = 8;
     * </pre>
     *
     * <code>optional uint32 KIGOIMMHHLE = 9;</code>
     * @param value the kIGOIMMHHLE to set
     * @return this
     */
    public BattleStatistics setKIGOIMMHHLE(final int value) {
      bitField0_ |= 0x00000020;
      kIGOIMMHHLE = value;
      return this;
    }

    /**
     * <code>optional uint32 AOLAHGLLBAG = 10;</code>
     * @return whether the aOLAHGLLBAG field is set
     */
    public boolean hasAOLAHGLLBAG() {
      return (bitField0_ & 0x00000040) != 0;
    }

    /**
     * <code>optional uint32 AOLAHGLLBAG = 10;</code>
     * @return this
     */
    public BattleStatistics clearAOLAHGLLBAG() {
      bitField0_ &= ~0x00000040;
      aOLAHGLLBAG = 0;
      return this;
    }

    /**
     * <code>optional uint32 AOLAHGLLBAG = 10;</code>
     * @return the aOLAHGLLBAG
     */
    public int getAOLAHGLLBAG() {
      return aOLAHGLLBAG;
    }

    /**
     * <code>optional uint32 AOLAHGLLBAG = 10;</code>
     * @param value the aOLAHGLLBAG to set
     * @return this
     */
    public BattleStatistics setAOLAHGLLBAG(final int value) {
      bitField0_ |= 0x00000040;
      aOLAHGLLBAG = value;
      return this;
    }

    /**
     * <code>optional uint32 FCFPKHNLGKA = 11;</code>
     * @return whether the fCFPKHNLGKA field is set
     */
    public boolean hasFCFPKHNLGKA() {
      return (bitField0_ & 0x00000080) != 0;
    }

    /**
     * <code>optional uint32 FCFPKHNLGKA = 11;</code>
     * @return this
     */
    public BattleStatistics clearFCFPKHNLGKA() {
      bitField0_ &= ~0x00000080;
      fCFPKHNLGKA = 0;
      return this;
    }

    /**
     * <code>optional uint32 FCFPKHNLGKA = 11;</code>
     * @return the fCFPKHNLGKA
     */
    public int getFCFPKHNLGKA() {
      return fCFPKHNLGKA;
    }

    /**
     * <code>optional uint32 FCFPKHNLGKA = 11;</code>
     * @param value the fCFPKHNLGKA to set
     * @return this
     */
    public BattleStatistics setFCFPKHNLGKA(final int value) {
      bitField0_ |= 0x00000080;
      fCFPKHNLGKA = value;
      return this;
    }

    /**
     * <code>optional uint32 LIAALHKEHIM = 12;</code>
     * @return whether the lIAALHKEHIM field is set
     */
    public boolean hasLIAALHKEHIM() {
      return (bitField0_ & 0x00000100) != 0;
    }

    /**
     * <code>optional uint32 LIAALHKEHIM = 12;</code>
     * @return this
     */
    public BattleStatistics clearLIAALHKEHIM() {
      bitField0_ &= ~0x00000100;
      lIAALHKEHIM = 0;
      return this;
    }

    /**
     * <code>optional uint32 LIAALHKEHIM = 12;</code>
     * @return the lIAALHKEHIM
     */
    public int getLIAALHKEHIM() {
      return lIAALHKEHIM;
    }

    /**
     * <code>optional uint32 LIAALHKEHIM = 12;</code>
     * @param value the lIAALHKEHIM to set
     * @return this
     */
    public BattleStatistics setLIAALHKEHIM(final int value) {
      bitField0_ |= 0x00000100;
      lIAALHKEHIM = value;
      return this;
    }

    /**
     * <code>optional uint32 BEKMEDAINKG = 14;</code>
     * @return whether the bEKMEDAINKG field is set
     */
    public boolean hasBEKMEDAINKG() {
      return (bitField0_ & 0x00000200) != 0;
    }

    /**
     * <code>optional uint32 BEKMEDAINKG = 14;</code>
     * @return this
     */
    public BattleStatistics clearBEKMEDAINKG() {
      bitField0_ &= ~0x00000200;
      bEKMEDAINKG = 0;
      return this;
    }

    /**
     * <code>optional uint32 BEKMEDAINKG = 14;</code>
     * @return the bEKMEDAINKG
     */
    public int getBEKMEDAINKG() {
      return bEKMEDAINKG;
    }

    /**
     * <code>optional uint32 BEKMEDAINKG = 14;</code>
     * @param value the bEKMEDAINKG to set
     * @return this
     */
    public BattleStatistics setBEKMEDAINKG(final int value) {
      bitField0_ |= 0x00000200;
      bEKMEDAINKG = value;
      return this;
    }

    /**
     * <code>repeated uint32 avatar_id_list = 3;</code>
     * @return whether the avatarIdList field is set
     */
    public boolean hasAvatarIdList() {
      return (bitField0_ & 0x00000400) != 0;
    }

    /**
     * <code>repeated uint32 avatar_id_list = 3;</code>
     * @return this
     */
    public BattleStatistics clearAvatarIdList() {
      bitField0_ &= ~0x00000400;
      avatarIdList.clear();
      return this;
    }

    /**
     * <code>repeated uint32 avatar_id_list = 3;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableAvatarIdList()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedInt getAvatarIdList() {
      return avatarIdList;
    }

    /**
     * <code>repeated uint32 avatar_id_list = 3;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedInt getMutableAvatarIdList() {
      bitField0_ |= 0x00000400;
      return avatarIdList;
    }

    /**
     * <code>repeated uint32 avatar_id_list = 3;</code>
     * @param value the avatarIdList to add
     * @return this
     */
    public BattleStatistics addAvatarIdList(final int value) {
      bitField0_ |= 0x00000400;
      avatarIdList.add(value);
      return this;
    }

    /**
     * <code>repeated uint32 avatar_id_list = 3;</code>
     * @param values the avatarIdList to add
     * @return this
     */
    public BattleStatistics addAllAvatarIdList(final int... values) {
      bitField0_ |= 0x00000400;
      avatarIdList.addAll(values);
      return this;
    }

    /**
     * <code>repeated .AvatarBattleInfo battle_avatar_list = 7;</code>
     * @return whether the battleAvatarList field is set
     */
    public boolean hasBattleAvatarList() {
      return (bitField0_ & 0x00000800) != 0;
    }

    /**
     * <code>repeated .AvatarBattleInfo battle_avatar_list = 7;</code>
     * @return this
     */
    public BattleStatistics clearBattleAvatarList() {
      bitField0_ &= ~0x00000800;
      battleAvatarList.clear();
      return this;
    }

    /**
     * <code>repeated .AvatarBattleInfo battle_avatar_list = 7;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableBattleAvatarList()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedMessage<AvatarBattleInfoOuterClass.AvatarBattleInfo> getBattleAvatarList() {
      return battleAvatarList;
    }

    /**
     * <code>repeated .AvatarBattleInfo battle_avatar_list = 7;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedMessage<AvatarBattleInfoOuterClass.AvatarBattleInfo> getMutableBattleAvatarList(
        ) {
      bitField0_ |= 0x00000800;
      return battleAvatarList;
    }

    /**
     * <code>repeated .AvatarBattleInfo battle_avatar_list = 7;</code>
     * @param value the battleAvatarList to add
     * @return this
     */
    public BattleStatistics addBattleAvatarList(
        final AvatarBattleInfoOuterClass.AvatarBattleInfo value) {
      bitField0_ |= 0x00000800;
      battleAvatarList.add(value);
      return this;
    }

    /**
     * <code>repeated .AvatarBattleInfo battle_avatar_list = 7;</code>
     * @param values the battleAvatarList to add
     * @return this
     */
    public BattleStatistics addAllBattleAvatarList(
        final AvatarBattleInfoOuterClass.AvatarBattleInfo... values) {
      bitField0_ |= 0x00000800;
      battleAvatarList.addAll(values);
      return this;
    }

    /**
     * <code>repeated .BattleStatistics.CustomValuesEntry custom_values = 13;</code>
     * @return whether the customValues field is set
     */
    public boolean hasCustomValues() {
      return (bitField0_ & 0x00001000) != 0;
    }

    /**
     * <code>repeated .BattleStatistics.CustomValuesEntry custom_values = 13;</code>
     * @return this
     */
    public BattleStatistics clearCustomValues() {
      bitField0_ &= ~0x00001000;
      customValues.clear();
      return this;
    }

    /**
     * <code>repeated .BattleStatistics.CustomValuesEntry custom_values = 13;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableCustomValues()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedMessage<CustomValuesEntry> getCustomValues() {
      return customValues;
    }

    /**
     * <code>repeated .BattleStatistics.CustomValuesEntry custom_values = 13;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedMessage<CustomValuesEntry> getMutableCustomValues() {
      bitField0_ |= 0x00001000;
      return customValues;
    }

    /**
     * <code>repeated .BattleStatistics.CustomValuesEntry custom_values = 13;</code>
     * @param value the customValues to add
     * @return this
     */
    public BattleStatistics addCustomValues(final CustomValuesEntry value) {
      bitField0_ |= 0x00001000;
      customValues.add(value);
      return this;
    }

    /**
     * <code>repeated .BattleStatistics.CustomValuesEntry custom_values = 13;</code>
     * @param values the customValues to add
     * @return this
     */
    public BattleStatistics addAllCustomValues(final CustomValuesEntry... values) {
      bitField0_ |= 0x00001000;
      customValues.addAll(values);
      return this;
    }

    @Override
    public BattleStatistics copyFrom(final BattleStatistics other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        hKCPJKPOKGF = other.hKCPJKPOKGF;
        cKGDEAKGMLJ = other.cKGDEAKGMLJ;
        totalBattleTurns = other.totalBattleTurns;
        totalAutoTurns = other.totalAutoTurns;
        nIFHACPIHFP = other.nIFHACPIHFP;
        kIGOIMMHHLE = other.kIGOIMMHHLE;
        aOLAHGLLBAG = other.aOLAHGLLBAG;
        fCFPKHNLGKA = other.fCFPKHNLGKA;
        lIAALHKEHIM = other.lIAALHKEHIM;
        bEKMEDAINKG = other.bEKMEDAINKG;
        avatarIdList.copyFrom(other.avatarIdList);
        battleAvatarList.copyFrom(other.battleAvatarList);
        customValues.copyFrom(other.customValues);
      }
      return this;
    }

    @Override
    public BattleStatistics mergeFrom(final BattleStatistics other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasHKCPJKPOKGF()) {
        setHKCPJKPOKGF(other.hKCPJKPOKGF);
      }
      if (other.hasCKGDEAKGMLJ()) {
        setCKGDEAKGMLJ(other.cKGDEAKGMLJ);
      }
      if (other.hasTotalBattleTurns()) {
        setTotalBattleTurns(other.totalBattleTurns);
      }
      if (other.hasTotalAutoTurns()) {
        setTotalAutoTurns(other.totalAutoTurns);
      }
      if (other.hasNIFHACPIHFP()) {
        setNIFHACPIHFP(other.nIFHACPIHFP);
      }
      if (other.hasKIGOIMMHHLE()) {
        setKIGOIMMHHLE(other.kIGOIMMHHLE);
      }
      if (other.hasAOLAHGLLBAG()) {
        setAOLAHGLLBAG(other.aOLAHGLLBAG);
      }
      if (other.hasFCFPKHNLGKA()) {
        setFCFPKHNLGKA(other.fCFPKHNLGKA);
      }
      if (other.hasLIAALHKEHIM()) {
        setLIAALHKEHIM(other.lIAALHKEHIM);
      }
      if (other.hasBEKMEDAINKG()) {
        setBEKMEDAINKG(other.bEKMEDAINKG);
      }
      if (other.hasAvatarIdList()) {
        getMutableAvatarIdList().addAll(other.avatarIdList);
      }
      if (other.hasBattleAvatarList()) {
        getMutableBattleAvatarList().addAll(other.battleAvatarList);
      }
      if (other.hasCustomValues()) {
        getMutableCustomValues().addAll(other.customValues);
      }
      return this;
    }

    @Override
    public BattleStatistics clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      hKCPJKPOKGF = 0D;
      cKGDEAKGMLJ = 0D;
      totalBattleTurns = 0;
      totalAutoTurns = 0;
      nIFHACPIHFP = 0;
      kIGOIMMHHLE = 0;
      aOLAHGLLBAG = 0;
      fCFPKHNLGKA = 0;
      lIAALHKEHIM = 0;
      bEKMEDAINKG = 0;
      avatarIdList.clear();
      battleAvatarList.clear();
      customValues.clear();
      return this;
    }

    @Override
    public BattleStatistics clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      avatarIdList.clear();
      battleAvatarList.clearQuick();
      customValues.clearQuick();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof BattleStatistics)) {
        return false;
      }
      BattleStatistics other = (BattleStatistics) o;
      return bitField0_ == other.bitField0_
        && (!hasHKCPJKPOKGF() || ProtoUtil.isEqual(hKCPJKPOKGF, other.hKCPJKPOKGF))
        && (!hasCKGDEAKGMLJ() || ProtoUtil.isEqual(cKGDEAKGMLJ, other.cKGDEAKGMLJ))
        && (!hasTotalBattleTurns() || totalBattleTurns == other.totalBattleTurns)
        && (!hasTotalAutoTurns() || totalAutoTurns == other.totalAutoTurns)
        && (!hasNIFHACPIHFP() || nIFHACPIHFP == other.nIFHACPIHFP)
        && (!hasKIGOIMMHHLE() || kIGOIMMHHLE == other.kIGOIMMHHLE)
        && (!hasAOLAHGLLBAG() || aOLAHGLLBAG == other.aOLAHGLLBAG)
        && (!hasFCFPKHNLGKA() || fCFPKHNLGKA == other.fCFPKHNLGKA)
        && (!hasLIAALHKEHIM() || lIAALHKEHIM == other.lIAALHKEHIM)
        && (!hasBEKMEDAINKG() || bEKMEDAINKG == other.bEKMEDAINKG)
        && (!hasAvatarIdList() || avatarIdList.equals(other.avatarIdList))
        && (!hasBattleAvatarList() || battleAvatarList.equals(other.battleAvatarList))
        && (!hasCustomValues() || customValues.equals(other.customValues));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 41);
        output.writeDoubleNoTag(hKCPJKPOKGF);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 49);
        output.writeDoubleNoTag(cKGDEAKGMLJ);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 8);
        output.writeUInt32NoTag(totalBattleTurns);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 16);
        output.writeUInt32NoTag(totalAutoTurns);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 32);
        output.writeUInt32NoTag(nIFHACPIHFP);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeRawByte((byte) 72);
        output.writeUInt32NoTag(kIGOIMMHHLE);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        output.writeRawByte((byte) 80);
        output.writeUInt32NoTag(aOLAHGLLBAG);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        output.writeRawByte((byte) 88);
        output.writeUInt32NoTag(fCFPKHNLGKA);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        output.writeRawByte((byte) 96);
        output.writeUInt32NoTag(lIAALHKEHIM);
      }
      if ((bitField0_ & 0x00000200) != 0) {
        output.writeRawByte((byte) 112);
        output.writeUInt32NoTag(bEKMEDAINKG);
      }
      if ((bitField0_ & 0x00000400) != 0) {
        for (int i = 0; i < avatarIdList.length(); i++) {
          output.writeRawByte((byte) 24);
          output.writeUInt32NoTag(avatarIdList.array()[i]);
        }
      }
      if ((bitField0_ & 0x00000800) != 0) {
        for (int i = 0; i < battleAvatarList.length(); i++) {
          output.writeRawByte((byte) 58);
          output.writeMessageNoTag(battleAvatarList.get(i));
        }
      }
      if ((bitField0_ & 0x00001000) != 0) {
        for (int i = 0; i < customValues.length(); i++) {
          output.writeRawByte((byte) 106);
          output.writeMessageNoTag(customValues.get(i));
        }
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 9;
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 9;
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(totalBattleTurns);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(totalAutoTurns);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(nIFHACPIHFP);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(kIGOIMMHHLE);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(aOLAHGLLBAG);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(fCFPKHNLGKA);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(lIAALHKEHIM);
      }
      if ((bitField0_ & 0x00000200) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(bEKMEDAINKG);
      }
      if ((bitField0_ & 0x00000400) != 0) {
        size += (1 * avatarIdList.length()) + ProtoSink.computeRepeatedUInt32SizeNoTag(avatarIdList);
      }
      if ((bitField0_ & 0x00000800) != 0) {
        size += (1 * battleAvatarList.length()) + ProtoSink.computeRepeatedMessageSizeNoTag(battleAvatarList);
      }
      if ((bitField0_ & 0x00001000) != 0) {
        size += (1 * customValues.length()) + ProtoSink.computeRepeatedMessageSizeNoTag(customValues);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public BattleStatistics mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 41: {
            // hKCPJKPOKGF
            hKCPJKPOKGF = input.readDouble();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 49) {
              break;
            }
          }
          case 49: {
            // cKGDEAKGMLJ
            cKGDEAKGMLJ = input.readDouble();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 8) {
              break;
            }
          }
          case 8: {
            // totalBattleTurns
            totalBattleTurns = input.readUInt32();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 16) {
              break;
            }
          }
          case 16: {
            // totalAutoTurns
            totalAutoTurns = input.readUInt32();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 32) {
              break;
            }
          }
          case 32: {
            // nIFHACPIHFP
            nIFHACPIHFP = input.readUInt32();
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 72) {
              break;
            }
          }
          case 72: {
            // kIGOIMMHHLE
            kIGOIMMHHLE = input.readUInt32();
            bitField0_ |= 0x00000020;
            tag = input.readTag();
            if (tag != 80) {
              break;
            }
          }
          case 80: {
            // aOLAHGLLBAG
            aOLAHGLLBAG = input.readUInt32();
            bitField0_ |= 0x00000040;
            tag = input.readTag();
            if (tag != 88) {
              break;
            }
          }
          case 88: {
            // fCFPKHNLGKA
            fCFPKHNLGKA = input.readUInt32();
            bitField0_ |= 0x00000080;
            tag = input.readTag();
            if (tag != 96) {
              break;
            }
          }
          case 96: {
            // lIAALHKEHIM
            lIAALHKEHIM = input.readUInt32();
            bitField0_ |= 0x00000100;
            tag = input.readTag();
            if (tag != 112) {
              break;
            }
          }
          case 112: {
            // bEKMEDAINKG
            bEKMEDAINKG = input.readUInt32();
            bitField0_ |= 0x00000200;
            tag = input.readTag();
            if (tag != 26) {
              break;
            }
          }
          case 26: {
            // avatarIdList [packed=true]
            input.readPackedUInt32(avatarIdList, tag);
            bitField0_ |= 0x00000400;
            tag = input.readTag();
            if (tag != 58) {
              break;
            }
          }
          case 58: {
            // battleAvatarList
            tag = input.readRepeatedMessage(battleAvatarList, tag);
            bitField0_ |= 0x00000800;
            if (tag != 106) {
              break;
            }
          }
          case 106: {
            // customValues
            tag = input.readRepeatedMessage(customValues, tag);
            bitField0_ |= 0x00001000;
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
          case 24: {
            // avatarIdList [packed=false]
            tag = input.readRepeatedUInt32(avatarIdList, tag);
            bitField0_ |= 0x00000400;
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeDouble(FieldNames.hKCPJKPOKGF, hKCPJKPOKGF);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeDouble(FieldNames.cKGDEAKGMLJ, cKGDEAKGMLJ);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeUInt32(FieldNames.totalBattleTurns, totalBattleTurns);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeUInt32(FieldNames.totalAutoTurns, totalAutoTurns);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeUInt32(FieldNames.nIFHACPIHFP, nIFHACPIHFP);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeUInt32(FieldNames.kIGOIMMHHLE, kIGOIMMHHLE);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        output.writeUInt32(FieldNames.aOLAHGLLBAG, aOLAHGLLBAG);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        output.writeUInt32(FieldNames.fCFPKHNLGKA, fCFPKHNLGKA);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        output.writeUInt32(FieldNames.lIAALHKEHIM, lIAALHKEHIM);
      }
      if ((bitField0_ & 0x00000200) != 0) {
        output.writeUInt32(FieldNames.bEKMEDAINKG, bEKMEDAINKG);
      }
      if ((bitField0_ & 0x00000400) != 0) {
        output.writeRepeatedUInt32(FieldNames.avatarIdList, avatarIdList);
      }
      if ((bitField0_ & 0x00000800) != 0) {
        output.writeRepeatedMessage(FieldNames.battleAvatarList, battleAvatarList);
      }
      if ((bitField0_ & 0x00001000) != 0) {
        output.writeRepeatedMessage(FieldNames.customValues, customValues);
      }
      output.endObject();
    }

    @Override
    public BattleStatistics mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case -2060289862: {
            if (input.isAtField(FieldNames.hKCPJKPOKGF)) {
              if (!input.trySkipNullValue()) {
                hKCPJKPOKGF = input.readDouble();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -177934930: {
            if (input.isAtField(FieldNames.cKGDEAKGMLJ)) {
              if (!input.trySkipNullValue()) {
                cKGDEAKGMLJ = input.readDouble();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1501027290:
          case -1314204054: {
            if (input.isAtField(FieldNames.totalBattleTurns)) {
              if (!input.trySkipNullValue()) {
                totalBattleTurns = input.readUInt32();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1823561661:
          case 1641879777: {
            if (input.isAtField(FieldNames.totalAutoTurns)) {
              if (!input.trySkipNullValue()) {
                totalAutoTurns = input.readUInt32();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1375859398: {
            if (input.isAtField(FieldNames.nIFHACPIHFP)) {
              if (!input.trySkipNullValue()) {
                nIFHACPIHFP = input.readUInt32();
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 315896860: {
            if (input.isAtField(FieldNames.kIGOIMMHHLE)) {
              if (!input.trySkipNullValue()) {
                kIGOIMMHHLE = input.readUInt32();
                bitField0_ |= 0x00000020;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -210507450: {
            if (input.isAtField(FieldNames.aOLAHGLLBAG)) {
              if (!input.trySkipNullValue()) {
                aOLAHGLLBAG = input.readUInt32();
                bitField0_ |= 0x00000040;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1516966405: {
            if (input.isAtField(FieldNames.fCFPKHNLGKA)) {
              if (!input.trySkipNullValue()) {
                fCFPKHNLGKA = input.readUInt32();
                bitField0_ |= 0x00000080;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 366658265: {
            if (input.isAtField(FieldNames.lIAALHKEHIM)) {
              if (!input.trySkipNullValue()) {
                lIAALHKEHIM = input.readUInt32();
                bitField0_ |= 0x00000100;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1554616514: {
            if (input.isAtField(FieldNames.bEKMEDAINKG)) {
              if (!input.trySkipNullValue()) {
                bEKMEDAINKG = input.readUInt32();
                bitField0_ |= 0x00000200;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1214270702:
          case 1824281692: {
            if (input.isAtField(FieldNames.avatarIdList)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedUInt32(avatarIdList);
                bitField0_ |= 0x00000400;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 768292975:
          case 328463037: {
            if (input.isAtField(FieldNames.battleAvatarList)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedMessage(battleAvatarList);
                bitField0_ |= 0x00000800;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 455932915:
          case 1237417392: {
            if (input.isAtField(FieldNames.customValues)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedMessage(customValues);
                bitField0_ |= 0x00001000;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public BattleStatistics clone() {
      return new BattleStatistics().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static BattleStatistics parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new BattleStatistics(), data).checkInitialized();
    }

    public static BattleStatistics parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new BattleStatistics(), input).checkInitialized();
    }

    public static BattleStatistics parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new BattleStatistics(), input).checkInitialized();
    }

    /**
     * @return factory for creating BattleStatistics messages
     */
    public static MessageFactory<BattleStatistics> getFactory() {
      return BattleStatisticsFactory.INSTANCE;
    }

    /**
     * Protobuf type {@code CustomValuesEntry}
     */
    public static final class CustomValuesEntry extends ProtoMessage<CustomValuesEntry> implements Cloneable {
      private static final long serialVersionUID = 0L;

      /**
       * <code>optional float value = 2;</code>
       */
      private float value_;

      /**
       * <code>optional string key = 1;</code>
       */
      private final Utf8String key = Utf8String.newEmptyInstance();

      private CustomValuesEntry() {
      }

      /**
       * @return a new empty instance of {@code CustomValuesEntry}
       */
      public static CustomValuesEntry newInstance() {
        return new CustomValuesEntry();
      }

      /**
       * <code>optional float value = 2;</code>
       * @return whether the value_ field is set
       */
      public boolean hasValue() {
        return (bitField0_ & 0x00000001) != 0;
      }

      /**
       * <code>optional float value = 2;</code>
       * @return this
       */
      public CustomValuesEntry clearValue() {
        bitField0_ &= ~0x00000001;
        value_ = 0F;
        return this;
      }

      /**
       * <code>optional float value = 2;</code>
       * @return the value_
       */
      public float getValue() {
        return value_;
      }

      /**
       * <code>optional float value = 2;</code>
       * @param value the value_ to set
       * @return this
       */
      public CustomValuesEntry setValue(final float value) {
        bitField0_ |= 0x00000001;
        value_ = value;
        return this;
      }

      /**
       * <code>optional string key = 1;</code>
       * @return whether the key field is set
       */
      public boolean hasKey() {
        return (bitField0_ & 0x00000002) != 0;
      }

      /**
       * <code>optional string key = 1;</code>
       * @return this
       */
      public CustomValuesEntry clearKey() {
        bitField0_ &= ~0x00000002;
        key.clear();
        return this;
      }

      /**
       * <code>optional string key = 1;</code>
       * @return the key
       */
      public String getKey() {
        return key.getString();
      }

      /**
       * <code>optional string key = 1;</code>
       * @return internal {@code Utf8String} representation of key for reading
       */
      public Utf8String getKeyBytes() {
        return this.key;
      }

      /**
       * <code>optional string key = 1;</code>
       * @return internal {@code Utf8String} representation of key for modifications
       */
      public Utf8String getMutableKeyBytes() {
        bitField0_ |= 0x00000002;
        return this.key;
      }

      /**
       * <code>optional string key = 1;</code>
       * @param value the key to set
       * @return this
       */
      public CustomValuesEntry setKey(final CharSequence value) {
        bitField0_ |= 0x00000002;
        key.copyFrom(value);
        return this;
      }

      /**
       * <code>optional string key = 1;</code>
       * @param value the key to set
       * @return this
       */
      public CustomValuesEntry setKey(final Utf8String value) {
        bitField0_ |= 0x00000002;
        key.copyFrom(value);
        return this;
      }

      @Override
      public CustomValuesEntry copyFrom(final CustomValuesEntry other) {
        cachedSize = other.cachedSize;
        if ((bitField0_ | other.bitField0_) != 0) {
          bitField0_ = other.bitField0_;
          value_ = other.value_;
          key.copyFrom(other.key);
        }
        return this;
      }

      @Override
      public CustomValuesEntry mergeFrom(final CustomValuesEntry other) {
        if (other.isEmpty()) {
          return this;
        }
        cachedSize = -1;
        if (other.hasValue()) {
          setValue(other.value_);
        }
        if (other.hasKey()) {
          getMutableKeyBytes().copyFrom(other.key);
        }
        return this;
      }

      @Override
      public CustomValuesEntry clear() {
        if (isEmpty()) {
          return this;
        }
        cachedSize = -1;
        bitField0_ = 0;
        value_ = 0F;
        key.clear();
        return this;
      }

      @Override
      public CustomValuesEntry clearQuick() {
        if (isEmpty()) {
          return this;
        }
        cachedSize = -1;
        bitField0_ = 0;
        key.clear();
        return this;
      }

      @Override
      public boolean equals(Object o) {
        if (o == this) {
          return true;
        }
        if (!(o instanceof CustomValuesEntry)) {
          return false;
        }
        CustomValuesEntry other = (CustomValuesEntry) o;
        return bitField0_ == other.bitField0_
          && (!hasValue() || ProtoUtil.isEqual(value_, other.value_))
          && (!hasKey() || key.equals(other.key));
      }

      @Override
      public void writeTo(final ProtoSink output) throws IOException {
        if ((bitField0_ & 0x00000001) != 0) {
          output.writeRawByte((byte) 21);
          output.writeFloatNoTag(value_);
        }
        if ((bitField0_ & 0x00000002) != 0) {
          output.writeRawByte((byte) 10);
          output.writeStringNoTag(key);
        }
      }

      @Override
      protected int computeSerializedSize() {
        int size = 0;
        if ((bitField0_ & 0x00000001) != 0) {
          size += 5;
        }
        if ((bitField0_ & 0x00000002) != 0) {
          size += 1 + ProtoSink.computeStringSizeNoTag(key);
        }
        return size;
      }

      @Override
      @SuppressWarnings("fallthrough")
      public CustomValuesEntry mergeFrom(final ProtoSource input) throws IOException {
        // Enabled Fall-Through Optimization (QuickBuffers)
        int tag = input.readTag();
        while (true) {
          switch (tag) {
            case 21: {
              // value_
              value_ = input.readFloat();
              bitField0_ |= 0x00000001;
              tag = input.readTag();
              if (tag != 10) {
                break;
              }
            }
            case 10: {
              // key
              input.readString(key);
              bitField0_ |= 0x00000002;
              tag = input.readTag();
              if (tag != 0) {
                break;
              }
            }
            case 0: {
              return this;
            }
            default: {
              if (!input.skipField(tag)) {
                return this;
              }
              tag = input.readTag();
              break;
            }
          }
        }
      }

      @Override
      public void writeTo(final JsonSink output) throws IOException {
        output.beginObject();
        if ((bitField0_ & 0x00000001) != 0) {
          output.writeFloat(FieldNames.value_, value_);
        }
        if ((bitField0_ & 0x00000002) != 0) {
          output.writeString(FieldNames.key, key);
        }
        output.endObject();
      }

      @Override
      public CustomValuesEntry mergeFrom(final JsonSource input) throws IOException {
        if (!input.beginObject()) {
          return this;
        }
        while (!input.isAtEnd()) {
          switch (input.readFieldHash()) {
            case 111972721: {
              if (input.isAtField(FieldNames.value_)) {
                if (!input.trySkipNullValue()) {
                  value_ = input.readFloat();
                  bitField0_ |= 0x00000001;
                }
              } else {
                input.skipUnknownField();
              }
              break;
            }
            case 106079: {
              if (input.isAtField(FieldNames.key)) {
                if (!input.trySkipNullValue()) {
                  input.readString(key);
                  bitField0_ |= 0x00000002;
                }
              } else {
                input.skipUnknownField();
              }
              break;
            }
            default: {
              input.skipUnknownField();
              break;
            }
          }
        }
        input.endObject();
        return this;
      }

      @Override
      public CustomValuesEntry clone() {
        return new CustomValuesEntry().copyFrom(this);
      }

      @Override
      public boolean isEmpty() {
        return ((bitField0_) == 0);
      }

      public static CustomValuesEntry parseFrom(final byte[] data) throws
          InvalidProtocolBufferException {
        return ProtoMessage.mergeFrom(new CustomValuesEntry(), data).checkInitialized();
      }

      public static CustomValuesEntry parseFrom(final ProtoSource input) throws IOException {
        return ProtoMessage.mergeFrom(new CustomValuesEntry(), input).checkInitialized();
      }

      public static CustomValuesEntry parseFrom(final JsonSource input) throws IOException {
        return ProtoMessage.mergeFrom(new CustomValuesEntry(), input).checkInitialized();
      }

      /**
       * @return factory for creating CustomValuesEntry messages
       */
      public static MessageFactory<CustomValuesEntry> getFactory() {
        return CustomValuesEntryFactory.INSTANCE;
      }

      private enum CustomValuesEntryFactory implements MessageFactory<CustomValuesEntry> {
        INSTANCE;

        @Override
        public CustomValuesEntry create() {
          return CustomValuesEntry.newInstance();
        }
      }

      /**
       * Contains name constants used for serializing JSON
       */
      static class FieldNames {
        static final FieldName value_ = FieldName.forField("value");

        static final FieldName key = FieldName.forField("key");
      }
    }

    private enum BattleStatisticsFactory implements MessageFactory<BattleStatistics> {
      INSTANCE;

      @Override
      public BattleStatistics create() {
        return BattleStatistics.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName hKCPJKPOKGF = FieldName.forField("HKCPJKPOKGF");

      static final FieldName cKGDEAKGMLJ = FieldName.forField("CKGDEAKGMLJ");

      static final FieldName totalBattleTurns = FieldName.forField("totalBattleTurns", "total_battle_turns");

      static final FieldName totalAutoTurns = FieldName.forField("totalAutoTurns", "total_auto_turns");

      static final FieldName nIFHACPIHFP = FieldName.forField("NIFHACPIHFP");

      static final FieldName kIGOIMMHHLE = FieldName.forField("KIGOIMMHHLE");

      static final FieldName aOLAHGLLBAG = FieldName.forField("AOLAHGLLBAG");

      static final FieldName fCFPKHNLGKA = FieldName.forField("FCFPKHNLGKA");

      static final FieldName lIAALHKEHIM = FieldName.forField("LIAALHKEHIM");

      static final FieldName bEKMEDAINKG = FieldName.forField("BEKMEDAINKG");

      static final FieldName avatarIdList = FieldName.forField("avatarIdList", "avatar_id_list");

      static final FieldName battleAvatarList = FieldName.forField("battleAvatarList", "battle_avatar_list");

      static final FieldName customValues = FieldName.forField("customValues", "custom_values");
    }
  }
}
