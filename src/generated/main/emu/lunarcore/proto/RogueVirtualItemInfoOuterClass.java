// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class RogueVirtualItemInfoOuterClass {
  /**
   * Protobuf type {@code RogueVirtualItemInfo}
   */
  public static final class RogueVirtualItemInfo extends ProtoMessage<RogueVirtualItemInfo> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 ALLDDMKKICK = 1;</code>
     */
    private int aLLDDMKKICK;

    /**
     * <code>optional uint32 DOMMGENHGKE = 4;</code>
     */
    private int dOMMGENHGKE;

    /**
     * <code>optional uint32 KMAGFHIIALA = 10;</code>
     */
    private int kMAGFHIIALA;

    /**
     * <code>optional uint32 rogue_talent_points = 14;</code>
     */
    private int rogueTalentPoints;

    private RogueVirtualItemInfo() {
    }

    /**
     * @return a new empty instance of {@code RogueVirtualItemInfo}
     */
    public static RogueVirtualItemInfo newInstance() {
      return new RogueVirtualItemInfo();
    }

    /**
     * <code>optional uint32 ALLDDMKKICK = 1;</code>
     * @return whether the aLLDDMKKICK field is set
     */
    public boolean hasALLDDMKKICK() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 ALLDDMKKICK = 1;</code>
     * @return this
     */
    public RogueVirtualItemInfo clearALLDDMKKICK() {
      bitField0_ &= ~0x00000001;
      aLLDDMKKICK = 0;
      return this;
    }

    /**
     * <code>optional uint32 ALLDDMKKICK = 1;</code>
     * @return the aLLDDMKKICK
     */
    public int getALLDDMKKICK() {
      return aLLDDMKKICK;
    }

    /**
     * <code>optional uint32 ALLDDMKKICK = 1;</code>
     * @param value the aLLDDMKKICK to set
     * @return this
     */
    public RogueVirtualItemInfo setALLDDMKKICK(final int value) {
      bitField0_ |= 0x00000001;
      aLLDDMKKICK = value;
      return this;
    }

    /**
     * <code>optional uint32 DOMMGENHGKE = 4;</code>
     * @return whether the dOMMGENHGKE field is set
     */
    public boolean hasDOMMGENHGKE() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 DOMMGENHGKE = 4;</code>
     * @return this
     */
    public RogueVirtualItemInfo clearDOMMGENHGKE() {
      bitField0_ &= ~0x00000002;
      dOMMGENHGKE = 0;
      return this;
    }

    /**
     * <code>optional uint32 DOMMGENHGKE = 4;</code>
     * @return the dOMMGENHGKE
     */
    public int getDOMMGENHGKE() {
      return dOMMGENHGKE;
    }

    /**
     * <code>optional uint32 DOMMGENHGKE = 4;</code>
     * @param value the dOMMGENHGKE to set
     * @return this
     */
    public RogueVirtualItemInfo setDOMMGENHGKE(final int value) {
      bitField0_ |= 0x00000002;
      dOMMGENHGKE = value;
      return this;
    }

    /**
     * <code>optional uint32 KMAGFHIIALA = 10;</code>
     * @return whether the kMAGFHIIALA field is set
     */
    public boolean hasKMAGFHIIALA() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional uint32 KMAGFHIIALA = 10;</code>
     * @return this
     */
    public RogueVirtualItemInfo clearKMAGFHIIALA() {
      bitField0_ &= ~0x00000004;
      kMAGFHIIALA = 0;
      return this;
    }

    /**
     * <code>optional uint32 KMAGFHIIALA = 10;</code>
     * @return the kMAGFHIIALA
     */
    public int getKMAGFHIIALA() {
      return kMAGFHIIALA;
    }

    /**
     * <code>optional uint32 KMAGFHIIALA = 10;</code>
     * @param value the kMAGFHIIALA to set
     * @return this
     */
    public RogueVirtualItemInfo setKMAGFHIIALA(final int value) {
      bitField0_ |= 0x00000004;
      kMAGFHIIALA = value;
      return this;
    }

    /**
     * <code>optional uint32 rogue_talent_points = 14;</code>
     * @return whether the rogueTalentPoints field is set
     */
    public boolean hasRogueTalentPoints() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional uint32 rogue_talent_points = 14;</code>
     * @return this
     */
    public RogueVirtualItemInfo clearRogueTalentPoints() {
      bitField0_ &= ~0x00000008;
      rogueTalentPoints = 0;
      return this;
    }

    /**
     * <code>optional uint32 rogue_talent_points = 14;</code>
     * @return the rogueTalentPoints
     */
    public int getRogueTalentPoints() {
      return rogueTalentPoints;
    }

    /**
     * <code>optional uint32 rogue_talent_points = 14;</code>
     * @param value the rogueTalentPoints to set
     * @return this
     */
    public RogueVirtualItemInfo setRogueTalentPoints(final int value) {
      bitField0_ |= 0x00000008;
      rogueTalentPoints = value;
      return this;
    }

    @Override
    public RogueVirtualItemInfo copyFrom(final RogueVirtualItemInfo other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        aLLDDMKKICK = other.aLLDDMKKICK;
        dOMMGENHGKE = other.dOMMGENHGKE;
        kMAGFHIIALA = other.kMAGFHIIALA;
        rogueTalentPoints = other.rogueTalentPoints;
      }
      return this;
    }

    @Override
    public RogueVirtualItemInfo mergeFrom(final RogueVirtualItemInfo other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasALLDDMKKICK()) {
        setALLDDMKKICK(other.aLLDDMKKICK);
      }
      if (other.hasDOMMGENHGKE()) {
        setDOMMGENHGKE(other.dOMMGENHGKE);
      }
      if (other.hasKMAGFHIIALA()) {
        setKMAGFHIIALA(other.kMAGFHIIALA);
      }
      if (other.hasRogueTalentPoints()) {
        setRogueTalentPoints(other.rogueTalentPoints);
      }
      return this;
    }

    @Override
    public RogueVirtualItemInfo clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      aLLDDMKKICK = 0;
      dOMMGENHGKE = 0;
      kMAGFHIIALA = 0;
      rogueTalentPoints = 0;
      return this;
    }

    @Override
    public RogueVirtualItemInfo clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof RogueVirtualItemInfo)) {
        return false;
      }
      RogueVirtualItemInfo other = (RogueVirtualItemInfo) o;
      return bitField0_ == other.bitField0_
        && (!hasALLDDMKKICK() || aLLDDMKKICK == other.aLLDDMKKICK)
        && (!hasDOMMGENHGKE() || dOMMGENHGKE == other.dOMMGENHGKE)
        && (!hasKMAGFHIIALA() || kMAGFHIIALA == other.kMAGFHIIALA)
        && (!hasRogueTalentPoints() || rogueTalentPoints == other.rogueTalentPoints);
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 8);
        output.writeUInt32NoTag(aLLDDMKKICK);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 32);
        output.writeUInt32NoTag(dOMMGENHGKE);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 80);
        output.writeUInt32NoTag(kMAGFHIIALA);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 112);
        output.writeUInt32NoTag(rogueTalentPoints);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(aLLDDMKKICK);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(dOMMGENHGKE);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(kMAGFHIIALA);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(rogueTalentPoints);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public RogueVirtualItemInfo mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 8: {
            // aLLDDMKKICK
            aLLDDMKKICK = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 32) {
              break;
            }
          }
          case 32: {
            // dOMMGENHGKE
            dOMMGENHGKE = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 80) {
              break;
            }
          }
          case 80: {
            // kMAGFHIIALA
            kMAGFHIIALA = input.readUInt32();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 112) {
              break;
            }
          }
          case 112: {
            // rogueTalentPoints
            rogueTalentPoints = input.readUInt32();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.aLLDDMKKICK, aLLDDMKKICK);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.dOMMGENHGKE, dOMMGENHGKE);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeUInt32(FieldNames.kMAGFHIIALA, kMAGFHIIALA);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeUInt32(FieldNames.rogueTalentPoints, rogueTalentPoints);
      }
      output.endObject();
    }

    @Override
    public RogueVirtualItemInfo mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case -2066689563: {
            if (input.isAtField(FieldNames.aLLDDMKKICK)) {
              if (!input.trySkipNullValue()) {
                aLLDDMKKICK = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -323022850: {
            if (input.isAtField(FieldNames.dOMMGENHGKE)) {
              if (!input.trySkipNullValue()) {
                dOMMGENHGKE = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -2082273588: {
            if (input.isAtField(FieldNames.kMAGFHIIALA)) {
              if (!input.trySkipNullValue()) {
                kMAGFHIIALA = input.readUInt32();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -569543703:
          case -9301519: {
            if (input.isAtField(FieldNames.rogueTalentPoints)) {
              if (!input.trySkipNullValue()) {
                rogueTalentPoints = input.readUInt32();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public RogueVirtualItemInfo clone() {
      return new RogueVirtualItemInfo().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static RogueVirtualItemInfo parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new RogueVirtualItemInfo(), data).checkInitialized();
    }

    public static RogueVirtualItemInfo parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new RogueVirtualItemInfo(), input).checkInitialized();
    }

    public static RogueVirtualItemInfo parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new RogueVirtualItemInfo(), input).checkInitialized();
    }

    /**
     * @return factory for creating RogueVirtualItemInfo messages
     */
    public static MessageFactory<RogueVirtualItemInfo> getFactory() {
      return RogueVirtualItemInfoFactory.INSTANCE;
    }

    private enum RogueVirtualItemInfoFactory implements MessageFactory<RogueVirtualItemInfo> {
      INSTANCE;

      @Override
      public RogueVirtualItemInfo create() {
        return RogueVirtualItemInfo.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName aLLDDMKKICK = FieldName.forField("ALLDDMKKICK");

      static final FieldName dOMMGENHGKE = FieldName.forField("DOMMGENHGKE");

      static final FieldName kMAGFHIIALA = FieldName.forField("KMAGFHIIALA");

      static final FieldName rogueTalentPoints = FieldName.forField("rogueTalentPoints", "rogue_talent_points");
    }
  }
}
