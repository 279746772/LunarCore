// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class GetPrivateChatHistoryCsReqOuterClass {
  /**
   * Protobuf type {@code GetPrivateChatHistoryCsReq}
   */
  public static final class GetPrivateChatHistoryCsReq extends ProtoMessage<GetPrivateChatHistoryCsReq> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 to_uid = 13;</code>
     */
    private int toUid;

    /**
     * <code>optional uint32 NJNHPFLFKCN = 14;</code>
     */
    private int nJNHPFLFKCN;

    private GetPrivateChatHistoryCsReq() {
    }

    /**
     * @return a new empty instance of {@code GetPrivateChatHistoryCsReq}
     */
    public static GetPrivateChatHistoryCsReq newInstance() {
      return new GetPrivateChatHistoryCsReq();
    }

    /**
     * <code>optional uint32 to_uid = 13;</code>
     * @return whether the toUid field is set
     */
    public boolean hasToUid() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 to_uid = 13;</code>
     * @return this
     */
    public GetPrivateChatHistoryCsReq clearToUid() {
      bitField0_ &= ~0x00000001;
      toUid = 0;
      return this;
    }

    /**
     * <code>optional uint32 to_uid = 13;</code>
     * @return the toUid
     */
    public int getToUid() {
      return toUid;
    }

    /**
     * <code>optional uint32 to_uid = 13;</code>
     * @param value the toUid to set
     * @return this
     */
    public GetPrivateChatHistoryCsReq setToUid(final int value) {
      bitField0_ |= 0x00000001;
      toUid = value;
      return this;
    }

    /**
     * <code>optional uint32 NJNHPFLFKCN = 14;</code>
     * @return whether the nJNHPFLFKCN field is set
     */
    public boolean hasNJNHPFLFKCN() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 NJNHPFLFKCN = 14;</code>
     * @return this
     */
    public GetPrivateChatHistoryCsReq clearNJNHPFLFKCN() {
      bitField0_ &= ~0x00000002;
      nJNHPFLFKCN = 0;
      return this;
    }

    /**
     * <code>optional uint32 NJNHPFLFKCN = 14;</code>
     * @return the nJNHPFLFKCN
     */
    public int getNJNHPFLFKCN() {
      return nJNHPFLFKCN;
    }

    /**
     * <code>optional uint32 NJNHPFLFKCN = 14;</code>
     * @param value the nJNHPFLFKCN to set
     * @return this
     */
    public GetPrivateChatHistoryCsReq setNJNHPFLFKCN(final int value) {
      bitField0_ |= 0x00000002;
      nJNHPFLFKCN = value;
      return this;
    }

    @Override
    public GetPrivateChatHistoryCsReq copyFrom(final GetPrivateChatHistoryCsReq other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        toUid = other.toUid;
        nJNHPFLFKCN = other.nJNHPFLFKCN;
      }
      return this;
    }

    @Override
    public GetPrivateChatHistoryCsReq mergeFrom(final GetPrivateChatHistoryCsReq other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasToUid()) {
        setToUid(other.toUid);
      }
      if (other.hasNJNHPFLFKCN()) {
        setNJNHPFLFKCN(other.nJNHPFLFKCN);
      }
      return this;
    }

    @Override
    public GetPrivateChatHistoryCsReq clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      toUid = 0;
      nJNHPFLFKCN = 0;
      return this;
    }

    @Override
    public GetPrivateChatHistoryCsReq clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof GetPrivateChatHistoryCsReq)) {
        return false;
      }
      GetPrivateChatHistoryCsReq other = (GetPrivateChatHistoryCsReq) o;
      return bitField0_ == other.bitField0_
        && (!hasToUid() || toUid == other.toUid)
        && (!hasNJNHPFLFKCN() || nJNHPFLFKCN == other.nJNHPFLFKCN);
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 104);
        output.writeUInt32NoTag(toUid);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 112);
        output.writeUInt32NoTag(nJNHPFLFKCN);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(toUid);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(nJNHPFLFKCN);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public GetPrivateChatHistoryCsReq mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 104: {
            // toUid
            toUid = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 112) {
              break;
            }
          }
          case 112: {
            // nJNHPFLFKCN
            nJNHPFLFKCN = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.toUid, toUid);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.nJNHPFLFKCN, nJNHPFLFKCN);
      }
      output.endObject();
    }

    @Override
    public GetPrivateChatHistoryCsReq mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 110520277:
          case -868529012: {
            if (input.isAtField(FieldNames.toUid)) {
              if (!input.trySkipNullValue()) {
                toUid = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1657620688: {
            if (input.isAtField(FieldNames.nJNHPFLFKCN)) {
              if (!input.trySkipNullValue()) {
                nJNHPFLFKCN = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public GetPrivateChatHistoryCsReq clone() {
      return new GetPrivateChatHistoryCsReq().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static GetPrivateChatHistoryCsReq parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new GetPrivateChatHistoryCsReq(), data).checkInitialized();
    }

    public static GetPrivateChatHistoryCsReq parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new GetPrivateChatHistoryCsReq(), input).checkInitialized();
    }

    public static GetPrivateChatHistoryCsReq parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new GetPrivateChatHistoryCsReq(), input).checkInitialized();
    }

    /**
     * @return factory for creating GetPrivateChatHistoryCsReq messages
     */
    public static MessageFactory<GetPrivateChatHistoryCsReq> getFactory() {
      return GetPrivateChatHistoryCsReqFactory.INSTANCE;
    }

    private enum GetPrivateChatHistoryCsReqFactory implements MessageFactory<GetPrivateChatHistoryCsReq> {
      INSTANCE;

      @Override
      public GetPrivateChatHistoryCsReq create() {
        return GetPrivateChatHistoryCsReq.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName toUid = FieldName.forField("toUid", "to_uid");

      static final FieldName nJNHPFLFKCN = FieldName.forField("NJNHPFLFKCN");
    }
  }
}
