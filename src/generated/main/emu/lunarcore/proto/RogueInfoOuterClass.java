// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.RepeatedInt;
import us.hebi.quickbuf.RepeatedMessage;

public final class RogueInfoOuterClass {
  /**
   * Protobuf type {@code RogueInfo}
   */
  public static final class RogueInfo extends ProtoMessage<RogueInfo> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional int64 end_time = 2;</code>
     */
    private long endTime;

    /**
     * <code>optional int64 begin_time = 14;</code>
     */
    private long beginTime;

    /**
     * <code>optional uint32 KMAGFHIIALA = 1;</code>
     */
    private int kMAGFHIIALA;

    /**
     * <code>optional uint32 rogue_season_id = 7;</code>
     */
    private int rogueSeasonId;

    /**
     * <code>optional uint32 HNIJEKJEGHB = 486;</code>
     */
    private int hNIJEKJEGHB;

    /**
     * <code>optional uint32 HDBPIDMBJOH = 944;</code>
     */
    private int hDBPIDMBJOH;

    /**
     * <code>optional .RogueStatus status = 11;</code>
     */
    private int status;

    /**
     * <code>optional .RogueInfoData rogue_data = 256;</code>
     */
    private final RogueInfoDataOuterClass.RogueInfoData rogueData = RogueInfoDataOuterClass.RogueInfoData.newInstance();

    /**
     * <code>optional .RogueScoreRewardInfo rogue_score_info = 1300;</code>
     */
    private final RogueScoreRewardInfoOuterClass.RogueScoreRewardInfo rogueScoreInfo = RogueScoreRewardInfoOuterClass.RogueScoreRewardInfo.newInstance();

    /**
     * <code>repeated uint32 base_avatar_id_list = 12;</code>
     */
    private final RepeatedInt baseAvatarIdList = RepeatedInt.newEmptyInstance();

    /**
     * <code>repeated .RogueArea rogue_area_list = 239;</code>
     */
    private final RepeatedMessage<RogueAreaOuterClass.RogueArea> rogueAreaList = RepeatedMessage.newEmptyInstance(RogueAreaOuterClass.RogueArea.getFactory());

    private RogueInfo() {
    }

    /**
     * @return a new empty instance of {@code RogueInfo}
     */
    public static RogueInfo newInstance() {
      return new RogueInfo();
    }

    /**
     * <code>optional int64 end_time = 2;</code>
     * @return whether the endTime field is set
     */
    public boolean hasEndTime() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional int64 end_time = 2;</code>
     * @return this
     */
    public RogueInfo clearEndTime() {
      bitField0_ &= ~0x00000001;
      endTime = 0L;
      return this;
    }

    /**
     * <code>optional int64 end_time = 2;</code>
     * @return the endTime
     */
    public long getEndTime() {
      return endTime;
    }

    /**
     * <code>optional int64 end_time = 2;</code>
     * @param value the endTime to set
     * @return this
     */
    public RogueInfo setEndTime(final long value) {
      bitField0_ |= 0x00000001;
      endTime = value;
      return this;
    }

    /**
     * <code>optional int64 begin_time = 14;</code>
     * @return whether the beginTime field is set
     */
    public boolean hasBeginTime() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional int64 begin_time = 14;</code>
     * @return this
     */
    public RogueInfo clearBeginTime() {
      bitField0_ &= ~0x00000002;
      beginTime = 0L;
      return this;
    }

    /**
     * <code>optional int64 begin_time = 14;</code>
     * @return the beginTime
     */
    public long getBeginTime() {
      return beginTime;
    }

    /**
     * <code>optional int64 begin_time = 14;</code>
     * @param value the beginTime to set
     * @return this
     */
    public RogueInfo setBeginTime(final long value) {
      bitField0_ |= 0x00000002;
      beginTime = value;
      return this;
    }

    /**
     * <code>optional uint32 KMAGFHIIALA = 1;</code>
     * @return whether the kMAGFHIIALA field is set
     */
    public boolean hasKMAGFHIIALA() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional uint32 KMAGFHIIALA = 1;</code>
     * @return this
     */
    public RogueInfo clearKMAGFHIIALA() {
      bitField0_ &= ~0x00000004;
      kMAGFHIIALA = 0;
      return this;
    }

    /**
     * <code>optional uint32 KMAGFHIIALA = 1;</code>
     * @return the kMAGFHIIALA
     */
    public int getKMAGFHIIALA() {
      return kMAGFHIIALA;
    }

    /**
     * <code>optional uint32 KMAGFHIIALA = 1;</code>
     * @param value the kMAGFHIIALA to set
     * @return this
     */
    public RogueInfo setKMAGFHIIALA(final int value) {
      bitField0_ |= 0x00000004;
      kMAGFHIIALA = value;
      return this;
    }

    /**
     * <code>optional uint32 rogue_season_id = 7;</code>
     * @return whether the rogueSeasonId field is set
     */
    public boolean hasRogueSeasonId() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional uint32 rogue_season_id = 7;</code>
     * @return this
     */
    public RogueInfo clearRogueSeasonId() {
      bitField0_ &= ~0x00000008;
      rogueSeasonId = 0;
      return this;
    }

    /**
     * <code>optional uint32 rogue_season_id = 7;</code>
     * @return the rogueSeasonId
     */
    public int getRogueSeasonId() {
      return rogueSeasonId;
    }

    /**
     * <code>optional uint32 rogue_season_id = 7;</code>
     * @param value the rogueSeasonId to set
     * @return this
     */
    public RogueInfo setRogueSeasonId(final int value) {
      bitField0_ |= 0x00000008;
      rogueSeasonId = value;
      return this;
    }

    /**
     * <code>optional uint32 HNIJEKJEGHB = 486;</code>
     * @return whether the hNIJEKJEGHB field is set
     */
    public boolean hasHNIJEKJEGHB() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional uint32 HNIJEKJEGHB = 486;</code>
     * @return this
     */
    public RogueInfo clearHNIJEKJEGHB() {
      bitField0_ &= ~0x00000010;
      hNIJEKJEGHB = 0;
      return this;
    }

    /**
     * <code>optional uint32 HNIJEKJEGHB = 486;</code>
     * @return the hNIJEKJEGHB
     */
    public int getHNIJEKJEGHB() {
      return hNIJEKJEGHB;
    }

    /**
     * <code>optional uint32 HNIJEKJEGHB = 486;</code>
     * @param value the hNIJEKJEGHB to set
     * @return this
     */
    public RogueInfo setHNIJEKJEGHB(final int value) {
      bitField0_ |= 0x00000010;
      hNIJEKJEGHB = value;
      return this;
    }

    /**
     * <code>optional uint32 HDBPIDMBJOH = 944;</code>
     * @return whether the hDBPIDMBJOH field is set
     */
    public boolean hasHDBPIDMBJOH() {
      return (bitField0_ & 0x00000020) != 0;
    }

    /**
     * <code>optional uint32 HDBPIDMBJOH = 944;</code>
     * @return this
     */
    public RogueInfo clearHDBPIDMBJOH() {
      bitField0_ &= ~0x00000020;
      hDBPIDMBJOH = 0;
      return this;
    }

    /**
     * <code>optional uint32 HDBPIDMBJOH = 944;</code>
     * @return the hDBPIDMBJOH
     */
    public int getHDBPIDMBJOH() {
      return hDBPIDMBJOH;
    }

    /**
     * <code>optional uint32 HDBPIDMBJOH = 944;</code>
     * @param value the hDBPIDMBJOH to set
     * @return this
     */
    public RogueInfo setHDBPIDMBJOH(final int value) {
      bitField0_ |= 0x00000020;
      hDBPIDMBJOH = value;
      return this;
    }

    /**
     * <code>optional .RogueStatus status = 11;</code>
     * @return whether the status field is set
     */
    public boolean hasStatus() {
      return (bitField0_ & 0x00000040) != 0;
    }

    /**
     * <code>optional .RogueStatus status = 11;</code>
     * @return this
     */
    public RogueInfo clearStatus() {
      bitField0_ &= ~0x00000040;
      status = 0;
      return this;
    }

    /**
     * <code>optional .RogueStatus status = 11;</code>
     * @return the status
     */
    public RogueStatusOuterClass.RogueStatus getStatus() {
      return RogueStatusOuterClass.RogueStatus.forNumber(status);
    }

    /**
     * Gets the value of the internal enum store. The result is
     * equivalent to {@link RogueInfo#getStatus()}.getNumber().
     *
     * @return numeric wire representation
     */
    public int getStatusValue() {
      return status;
    }

    /**
     * Sets the value of the internal enum store. This does not
     * do any validity checks, so be sure to use appropriate value
     * constants from {@link RogueStatusOuterClass.RogueStatus}. Setting an invalid value
     * can cause {@link RogueInfo#getStatus()} to return null
     *
     * @param value the numeric wire value to set
     * @return this
     */
    public RogueInfo setStatusValue(final int value) {
      bitField0_ |= 0x00000040;
      status = value;
      return this;
    }

    /**
     * <code>optional .RogueStatus status = 11;</code>
     * @param value the status to set
     * @return this
     */
    public RogueInfo setStatus(final RogueStatusOuterClass.RogueStatus value) {
      bitField0_ |= 0x00000040;
      status = value.getNumber();
      return this;
    }

    /**
     * <code>optional .RogueInfoData rogue_data = 256;</code>
     * @return whether the rogueData field is set
     */
    public boolean hasRogueData() {
      return (bitField0_ & 0x00000080) != 0;
    }

    /**
     * <code>optional .RogueInfoData rogue_data = 256;</code>
     * @return this
     */
    public RogueInfo clearRogueData() {
      bitField0_ &= ~0x00000080;
      rogueData.clear();
      return this;
    }

    /**
     * <code>optional .RogueInfoData rogue_data = 256;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableRogueData()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RogueInfoDataOuterClass.RogueInfoData getRogueData() {
      return rogueData;
    }

    /**
     * <code>optional .RogueInfoData rogue_data = 256;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RogueInfoDataOuterClass.RogueInfoData getMutableRogueData() {
      bitField0_ |= 0x00000080;
      return rogueData;
    }

    /**
     * <code>optional .RogueInfoData rogue_data = 256;</code>
     * @param value the rogueData to set
     * @return this
     */
    public RogueInfo setRogueData(final RogueInfoDataOuterClass.RogueInfoData value) {
      bitField0_ |= 0x00000080;
      rogueData.copyFrom(value);
      return this;
    }

    /**
     * <code>optional .RogueScoreRewardInfo rogue_score_info = 1300;</code>
     * @return whether the rogueScoreInfo field is set
     */
    public boolean hasRogueScoreInfo() {
      return (bitField0_ & 0x00000100) != 0;
    }

    /**
     * <code>optional .RogueScoreRewardInfo rogue_score_info = 1300;</code>
     * @return this
     */
    public RogueInfo clearRogueScoreInfo() {
      bitField0_ &= ~0x00000100;
      rogueScoreInfo.clear();
      return this;
    }

    /**
     * <code>optional .RogueScoreRewardInfo rogue_score_info = 1300;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableRogueScoreInfo()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RogueScoreRewardInfoOuterClass.RogueScoreRewardInfo getRogueScoreInfo() {
      return rogueScoreInfo;
    }

    /**
     * <code>optional .RogueScoreRewardInfo rogue_score_info = 1300;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RogueScoreRewardInfoOuterClass.RogueScoreRewardInfo getMutableRogueScoreInfo() {
      bitField0_ |= 0x00000100;
      return rogueScoreInfo;
    }

    /**
     * <code>optional .RogueScoreRewardInfo rogue_score_info = 1300;</code>
     * @param value the rogueScoreInfo to set
     * @return this
     */
    public RogueInfo setRogueScoreInfo(
        final RogueScoreRewardInfoOuterClass.RogueScoreRewardInfo value) {
      bitField0_ |= 0x00000100;
      rogueScoreInfo.copyFrom(value);
      return this;
    }

    /**
     * <code>repeated uint32 base_avatar_id_list = 12;</code>
     * @return whether the baseAvatarIdList field is set
     */
    public boolean hasBaseAvatarIdList() {
      return (bitField0_ & 0x00000200) != 0;
    }

    /**
     * <code>repeated uint32 base_avatar_id_list = 12;</code>
     * @return this
     */
    public RogueInfo clearBaseAvatarIdList() {
      bitField0_ &= ~0x00000200;
      baseAvatarIdList.clear();
      return this;
    }

    /**
     * <code>repeated uint32 base_avatar_id_list = 12;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableBaseAvatarIdList()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedInt getBaseAvatarIdList() {
      return baseAvatarIdList;
    }

    /**
     * <code>repeated uint32 base_avatar_id_list = 12;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedInt getMutableBaseAvatarIdList() {
      bitField0_ |= 0x00000200;
      return baseAvatarIdList;
    }

    /**
     * <code>repeated uint32 base_avatar_id_list = 12;</code>
     * @param value the baseAvatarIdList to add
     * @return this
     */
    public RogueInfo addBaseAvatarIdList(final int value) {
      bitField0_ |= 0x00000200;
      baseAvatarIdList.add(value);
      return this;
    }

    /**
     * <code>repeated uint32 base_avatar_id_list = 12;</code>
     * @param values the baseAvatarIdList to add
     * @return this
     */
    public RogueInfo addAllBaseAvatarIdList(final int... values) {
      bitField0_ |= 0x00000200;
      baseAvatarIdList.addAll(values);
      return this;
    }

    /**
     * <code>repeated .RogueArea rogue_area_list = 239;</code>
     * @return whether the rogueAreaList field is set
     */
    public boolean hasRogueAreaList() {
      return (bitField0_ & 0x00000400) != 0;
    }

    /**
     * <code>repeated .RogueArea rogue_area_list = 239;</code>
     * @return this
     */
    public RogueInfo clearRogueAreaList() {
      bitField0_ &= ~0x00000400;
      rogueAreaList.clear();
      return this;
    }

    /**
     * <code>repeated .RogueArea rogue_area_list = 239;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableRogueAreaList()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedMessage<RogueAreaOuterClass.RogueArea> getRogueAreaList() {
      return rogueAreaList;
    }

    /**
     * <code>repeated .RogueArea rogue_area_list = 239;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedMessage<RogueAreaOuterClass.RogueArea> getMutableRogueAreaList() {
      bitField0_ |= 0x00000400;
      return rogueAreaList;
    }

    /**
     * <code>repeated .RogueArea rogue_area_list = 239;</code>
     * @param value the rogueAreaList to add
     * @return this
     */
    public RogueInfo addRogueAreaList(final RogueAreaOuterClass.RogueArea value) {
      bitField0_ |= 0x00000400;
      rogueAreaList.add(value);
      return this;
    }

    /**
     * <code>repeated .RogueArea rogue_area_list = 239;</code>
     * @param values the rogueAreaList to add
     * @return this
     */
    public RogueInfo addAllRogueAreaList(final RogueAreaOuterClass.RogueArea... values) {
      bitField0_ |= 0x00000400;
      rogueAreaList.addAll(values);
      return this;
    }

    @Override
    public RogueInfo copyFrom(final RogueInfo other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        endTime = other.endTime;
        beginTime = other.beginTime;
        kMAGFHIIALA = other.kMAGFHIIALA;
        rogueSeasonId = other.rogueSeasonId;
        hNIJEKJEGHB = other.hNIJEKJEGHB;
        hDBPIDMBJOH = other.hDBPIDMBJOH;
        status = other.status;
        rogueData.copyFrom(other.rogueData);
        rogueScoreInfo.copyFrom(other.rogueScoreInfo);
        baseAvatarIdList.copyFrom(other.baseAvatarIdList);
        rogueAreaList.copyFrom(other.rogueAreaList);
      }
      return this;
    }

    @Override
    public RogueInfo mergeFrom(final RogueInfo other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasEndTime()) {
        setEndTime(other.endTime);
      }
      if (other.hasBeginTime()) {
        setBeginTime(other.beginTime);
      }
      if (other.hasKMAGFHIIALA()) {
        setKMAGFHIIALA(other.kMAGFHIIALA);
      }
      if (other.hasRogueSeasonId()) {
        setRogueSeasonId(other.rogueSeasonId);
      }
      if (other.hasHNIJEKJEGHB()) {
        setHNIJEKJEGHB(other.hNIJEKJEGHB);
      }
      if (other.hasHDBPIDMBJOH()) {
        setHDBPIDMBJOH(other.hDBPIDMBJOH);
      }
      if (other.hasStatus()) {
        setStatusValue(other.status);
      }
      if (other.hasRogueData()) {
        getMutableRogueData().mergeFrom(other.rogueData);
      }
      if (other.hasRogueScoreInfo()) {
        getMutableRogueScoreInfo().mergeFrom(other.rogueScoreInfo);
      }
      if (other.hasBaseAvatarIdList()) {
        getMutableBaseAvatarIdList().addAll(other.baseAvatarIdList);
      }
      if (other.hasRogueAreaList()) {
        getMutableRogueAreaList().addAll(other.rogueAreaList);
      }
      return this;
    }

    @Override
    public RogueInfo clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      endTime = 0L;
      beginTime = 0L;
      kMAGFHIIALA = 0;
      rogueSeasonId = 0;
      hNIJEKJEGHB = 0;
      hDBPIDMBJOH = 0;
      status = 0;
      rogueData.clear();
      rogueScoreInfo.clear();
      baseAvatarIdList.clear();
      rogueAreaList.clear();
      return this;
    }

    @Override
    public RogueInfo clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      rogueData.clearQuick();
      rogueScoreInfo.clearQuick();
      baseAvatarIdList.clear();
      rogueAreaList.clearQuick();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof RogueInfo)) {
        return false;
      }
      RogueInfo other = (RogueInfo) o;
      return bitField0_ == other.bitField0_
        && (!hasEndTime() || endTime == other.endTime)
        && (!hasBeginTime() || beginTime == other.beginTime)
        && (!hasKMAGFHIIALA() || kMAGFHIIALA == other.kMAGFHIIALA)
        && (!hasRogueSeasonId() || rogueSeasonId == other.rogueSeasonId)
        && (!hasHNIJEKJEGHB() || hNIJEKJEGHB == other.hNIJEKJEGHB)
        && (!hasHDBPIDMBJOH() || hDBPIDMBJOH == other.hDBPIDMBJOH)
        && (!hasStatus() || status == other.status)
        && (!hasRogueData() || rogueData.equals(other.rogueData))
        && (!hasRogueScoreInfo() || rogueScoreInfo.equals(other.rogueScoreInfo))
        && (!hasBaseAvatarIdList() || baseAvatarIdList.equals(other.baseAvatarIdList))
        && (!hasRogueAreaList() || rogueAreaList.equals(other.rogueAreaList));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 16);
        output.writeInt64NoTag(endTime);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 112);
        output.writeInt64NoTag(beginTime);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 8);
        output.writeUInt32NoTag(kMAGFHIIALA);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 56);
        output.writeUInt32NoTag(rogueSeasonId);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawLittleEndian16((short) 7856);
        output.writeUInt32NoTag(hNIJEKJEGHB);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeRawLittleEndian16((short) 15232);
        output.writeUInt32NoTag(hDBPIDMBJOH);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        output.writeRawByte((byte) 88);
        output.writeEnumNoTag(status);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        output.writeRawLittleEndian16((short) 4226);
        output.writeMessageNoTag(rogueData);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        output.writeRawLittleEndian16((short) 20898);
        output.writeMessageNoTag(rogueScoreInfo);
      }
      if ((bitField0_ & 0x00000200) != 0) {
        for (int i = 0; i < baseAvatarIdList.length(); i++) {
          output.writeRawByte((byte) 96);
          output.writeUInt32NoTag(baseAvatarIdList.array()[i]);
        }
      }
      if ((bitField0_ & 0x00000400) != 0) {
        for (int i = 0; i < rogueAreaList.length(); i++) {
          output.writeRawLittleEndian16((short) 3834);
          output.writeMessageNoTag(rogueAreaList.get(i));
        }
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeInt64SizeNoTag(endTime);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeInt64SizeNoTag(beginTime);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(kMAGFHIIALA);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(rogueSeasonId);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 2 + ProtoSink.computeUInt32SizeNoTag(hNIJEKJEGHB);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        size += 2 + ProtoSink.computeUInt32SizeNoTag(hDBPIDMBJOH);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        size += 1 + ProtoSink.computeEnumSizeNoTag(status);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        size += 2 + ProtoSink.computeMessageSizeNoTag(rogueData);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        size += 2 + ProtoSink.computeMessageSizeNoTag(rogueScoreInfo);
      }
      if ((bitField0_ & 0x00000200) != 0) {
        size += (1 * baseAvatarIdList.length()) + ProtoSink.computeRepeatedUInt32SizeNoTag(baseAvatarIdList);
      }
      if ((bitField0_ & 0x00000400) != 0) {
        size += (2 * rogueAreaList.length()) + ProtoSink.computeRepeatedMessageSizeNoTag(rogueAreaList);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public RogueInfo mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 16: {
            // endTime
            endTime = input.readInt64();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 112) {
              break;
            }
          }
          case 112: {
            // beginTime
            beginTime = input.readInt64();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 8) {
              break;
            }
          }
          case 8: {
            // kMAGFHIIALA
            kMAGFHIIALA = input.readUInt32();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 56) {
              break;
            }
          }
          case 56: {
            // rogueSeasonId
            rogueSeasonId = input.readUInt32();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 3888) {
              break;
            }
          }
          case 3888: {
            // hNIJEKJEGHB
            hNIJEKJEGHB = input.readUInt32();
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 7552) {
              break;
            }
          }
          case 7552: {
            // hDBPIDMBJOH
            hDBPIDMBJOH = input.readUInt32();
            bitField0_ |= 0x00000020;
            tag = input.readTag();
            if (tag != 88) {
              break;
            }
          }
          case 88: {
            // status
            final int value = input.readInt32();
            if (RogueStatusOuterClass.RogueStatus.forNumber(value) != null) {
              status = value;
              bitField0_ |= 0x00000040;
            }
            tag = input.readTag();
            if (tag != 2050) {
              break;
            }
          }
          case 2050: {
            // rogueData
            input.readMessage(rogueData);
            bitField0_ |= 0x00000080;
            tag = input.readTag();
            if (tag != 10402) {
              break;
            }
          }
          case 10402: {
            // rogueScoreInfo
            input.readMessage(rogueScoreInfo);
            bitField0_ |= 0x00000100;
            tag = input.readTag();
            if (tag != 98) {
              break;
            }
          }
          case 98: {
            // baseAvatarIdList [packed=true]
            input.readPackedUInt32(baseAvatarIdList, tag);
            bitField0_ |= 0x00000200;
            tag = input.readTag();
            if (tag != 1914) {
              break;
            }
          }
          case 1914: {
            // rogueAreaList
            tag = input.readRepeatedMessage(rogueAreaList, tag);
            bitField0_ |= 0x00000400;
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
          case 96: {
            // baseAvatarIdList [packed=false]
            tag = input.readRepeatedUInt32(baseAvatarIdList, tag);
            bitField0_ |= 0x00000200;
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeInt64(FieldNames.endTime, endTime);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeInt64(FieldNames.beginTime, beginTime);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeUInt32(FieldNames.kMAGFHIIALA, kMAGFHIIALA);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeUInt32(FieldNames.rogueSeasonId, rogueSeasonId);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeUInt32(FieldNames.hNIJEKJEGHB, hNIJEKJEGHB);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeUInt32(FieldNames.hDBPIDMBJOH, hDBPIDMBJOH);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        output.writeEnum(FieldNames.status, status, RogueStatusOuterClass.RogueStatus.converter());
      }
      if ((bitField0_ & 0x00000080) != 0) {
        output.writeMessage(FieldNames.rogueData, rogueData);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        output.writeMessage(FieldNames.rogueScoreInfo, rogueScoreInfo);
      }
      if ((bitField0_ & 0x00000200) != 0) {
        output.writeRepeatedUInt32(FieldNames.baseAvatarIdList, baseAvatarIdList);
      }
      if ((bitField0_ & 0x00000400) != 0) {
        output.writeRepeatedMessage(FieldNames.rogueAreaList, rogueAreaList);
      }
      output.endObject();
    }

    @Override
    public RogueInfo mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case -1607243192:
          case 1725551537: {
            if (input.isAtField(FieldNames.endTime)) {
              if (!input.trySkipNullValue()) {
                endTime = input.readInt64();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1072839914:
          case 1112183971: {
            if (input.isAtField(FieldNames.beginTime)) {
              if (!input.trySkipNullValue()) {
                beginTime = input.readInt64();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -2082273588: {
            if (input.isAtField(FieldNames.kMAGFHIIALA)) {
              if (!input.trySkipNullValue()) {
                kMAGFHIIALA = input.readUInt32();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -774262952:
          case 1067542482: {
            if (input.isAtField(FieldNames.rogueSeasonId)) {
              if (!input.trySkipNullValue()) {
                rogueSeasonId = input.readUInt32();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1669990649: {
            if (input.isAtField(FieldNames.hNIJEKJEGHB)) {
              if (!input.trySkipNullValue()) {
                hNIJEKJEGHB = input.readUInt32();
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 31692841: {
            if (input.isAtField(FieldNames.hDBPIDMBJOH)) {
              if (!input.trySkipNullValue()) {
                hDBPIDMBJOH = input.readUInt32();
                bitField0_ |= 0x00000020;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -892481550: {
            if (input.isAtField(FieldNames.status)) {
              if (!input.trySkipNullValue()) {
                final RogueStatusOuterClass.RogueStatus value = input.readEnum(RogueStatusOuterClass.RogueStatus.converter());
                if (value != null) {
                  status = value.getNumber();
                  bitField0_ |= 0x00000040;
                } else {
                  input.skipUnknownEnumValue();
                }
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 655647908:
          case -1124744465: {
            if (input.isAtField(FieldNames.rogueData)) {
              if (!input.trySkipNullValue()) {
                input.readMessage(rogueData);
                bitField0_ |= 0x00000080;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 2078217638:
          case -208816704: {
            if (input.isAtField(FieldNames.rogueScoreInfo)) {
              if (!input.trySkipNullValue()) {
                input.readMessage(rogueScoreInfo);
                bitField0_ |= 0x00000100;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1212654461:
          case 914628490: {
            if (input.isAtField(FieldNames.baseAvatarIdList)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedUInt32(baseAvatarIdList);
                bitField0_ |= 0x00000200;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 964382405:
          case -851420949: {
            if (input.isAtField(FieldNames.rogueAreaList)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedMessage(rogueAreaList);
                bitField0_ |= 0x00000400;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public RogueInfo clone() {
      return new RogueInfo().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static RogueInfo parseFrom(final byte[] data) throws InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new RogueInfo(), data).checkInitialized();
    }

    public static RogueInfo parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new RogueInfo(), input).checkInitialized();
    }

    public static RogueInfo parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new RogueInfo(), input).checkInitialized();
    }

    /**
     * @return factory for creating RogueInfo messages
     */
    public static MessageFactory<RogueInfo> getFactory() {
      return RogueInfoFactory.INSTANCE;
    }

    private enum RogueInfoFactory implements MessageFactory<RogueInfo> {
      INSTANCE;

      @Override
      public RogueInfo create() {
        return RogueInfo.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName endTime = FieldName.forField("endTime", "end_time");

      static final FieldName beginTime = FieldName.forField("beginTime", "begin_time");

      static final FieldName kMAGFHIIALA = FieldName.forField("KMAGFHIIALA");

      static final FieldName rogueSeasonId = FieldName.forField("rogueSeasonId", "rogue_season_id");

      static final FieldName hNIJEKJEGHB = FieldName.forField("HNIJEKJEGHB");

      static final FieldName hDBPIDMBJOH = FieldName.forField("HDBPIDMBJOH");

      static final FieldName status = FieldName.forField("status");

      static final FieldName rogueData = FieldName.forField("rogueData", "rogue_data");

      static final FieldName rogueScoreInfo = FieldName.forField("rogueScoreInfo", "rogue_score_info");

      static final FieldName baseAvatarIdList = FieldName.forField("baseAvatarIdList", "base_avatar_id_list");

      static final FieldName rogueAreaList = FieldName.forField("rogueAreaList", "rogue_area_list");
    }
  }
}
